<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrawfisSoftware.Dungeons</name>
    </assembly>
    <members>
        <member name="T:CrawfisSoftware.Dungeons.AbstractRoom`1">
            <summary>
            A simple class to represent a room in a dungeon.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.AbstractRoom`1._nextId">
            <summary>
            The next id to assign to a room.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.AbstractRoom`1.ID">
            <summary>
            The unique id for this room.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.AbstractRoom`1.RoomWeight">
            <summary>
            The number of exits from this room. In a more general case, A room could be a subgraph with different costs from one exit to another exit.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.AbstractRoom`1.RoomData">
            <summary>
            The data associated with this room.
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.AbstractRoom`1.CreateAbstractRoom(System.Int32,System.Single,`0)">
            <summary>
            Factory to create a new Room
            </summary>
            <param name="numberOfExits">The number of entrances and exits this room has.</param>
            <param name="roomWeight">The cost to move through this room.</param>
            <param name="roomData">The data associated with this room.</param>
            <returns>An <c>AbstractRoom</c></returns>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.Connection`1">
            <summary>
            An "edge" from one room to another room.
            </summary>
            <typeparam name="C">The type of the data associated with the connection.</typeparam>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.Connection`1.Room1">
            <summary>
            The two rooms that are connected.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.Connection`1.Room2">
            <summary>
            The two rooms that are connected.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.Connection`1.EdgeWeight">
            <summary>
            The weight of the edge between the two rooms.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.Connection`1.ConnectData">
            <summary>
            The data associated with this connection.
            </summary>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.DungeonGraph`2">
            <summary>
            Class to represent a dungeon graph. It is an <c>IIndexedGraph</c> with <c>AbstractRoom</c> data and <c>Connection</c> data
            </summary>
            <typeparam name="R">A type for any associated room data.</typeparam>
            <typeparam name="C">A type for any associated connection data.</typeparam>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraph`2.NumberOfEdges">
            <inheritdoc />
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraph`2.NumberOfNodes">
            <inheritdoc />
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraph`2.Nodes">
            <inheritdoc />
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraph`2.Edges">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.GetNodeLabel(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.Neighbors(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.OutEdges(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.Parents(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.InEdges(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.ContainsEdge(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.GetEdgeLabel(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.TryGetEdgeLabel(System.Int32,System.Int32,CrawfisSoftware.Dungeons.Connection{`1}@)">
            <inheritdoc />
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraph`2.#ctor(System.Collections.Generic.Dictionary{System.Int32,CrawfisSoftware.Dungeons.AbstractRoom{`0}},System.Collections.Generic.List{CrawfisSoftware.Dungeons.Connection{`1}})">
            <summary>
            Construct a new dungeon graph. Called by a builder
            </summary>
            <param name="rooms">A List of Abstract Rooms.</param>
            <param name="connections">A List of Connections.</param>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2">
            <summary>
            A class to build an abstract dungeon graph.
            </summary>
            <typeparam name="R">The type used for room data</typeparam>
            <typeparam name="C">The type used for connection data</typeparam>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.MinRoomSize">
            <summary>
            Get or set the minimum room size to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.MaxRoomSize">
            <summary>
            Get or set the maximum room size to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.RoomMoatSize">
            <summary>
            Get or set the outside wall buffer size
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.AddRoom(System.Int32,System.Single,`0)">
            <summary>
            Create a room explicitly at the specified location with the specified size.
            </summary>
            <returns>An id for the room.</returns>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.AddConnection(System.Int32,System.Int32,`1,System.Single)">
            <summary>
            Associate a passage between tow rooms
            </summary>
            <param name="room1">The id of the first room.</param>
            <param name="room2">The id of the second room.</param>
            <param name="edgeData">Any data to associate with this connection.</param>
            <param name="edgeWeight">The weight of the edge between the two rooms. The default is 1.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.MakeSequentialRoomConnections(System.Int32,`1,System.Single)">
            <summary>
            Add passageways between rooms in the order they were generated.
            </summary>
            <param name="skip">The number of rooms to skip between connections. The default is 0.</param>
            <param name="edgeData">Any data to associate with this connection.</param>
            <param name="edgeWeight">The weight of the edge between the two rooms. The default is 1.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonGraphBuilder`2.Build">
            <summary>
            Build the dungeon graph.
            </summary>
            <returns>A <c>DungeonGraph</c></returns>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.DungeonMazeBuilder">
            <summary>
            Maze builder extensions that rasterize a <c>DungeonGraph</c>'s, <c>GridRoom</c>'s and <c>PassageRasterizerType</c> connections.
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonMazeBuilder.RasterizeDungeon``4(CrawfisSoftware.Collections.Maze.MazeBuilderAbstract{``0,``1},CrawfisSoftware.Dungeons.DungeonGraph{CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Dungeons.GridPassageConnectionData{``3}},System.Boolean)">
            <summary>
            Take a dungeon graph with <c>GridRoom<typeparamref name="R"/></c> node data and <c>GridPassageConnectionData<typeparamref name="C"/></c> connection data and rasterize it into a maze.
            </summary>
            <typeparam name="N">The type used for node labels</typeparam>
            <typeparam name="E">The type used for edge weights</typeparam>
            <typeparam name="R">The type used for room data</typeparam>
            <typeparam name="C">The type used for connection data</typeparam>
            <param name="mazeBuilder">The underlying MazeBuilder</param>
            <param name="dungeonGraph">A dungeon graph or <c>GridRoom</c>'s and <c>GridPassageConnectionData</c>.</param>
            <param name="preserveExistingCells">Boolean indicating whether to only replace maze cells that are undefined.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonMazeBuilder.CarvePassage``3(CrawfisSoftware.Collections.Maze.MazeBuilderAbstract{``0,``1},CrawfisSoftware.Dungeons.PassageRasterizerType,CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Maze.MazePathCost{``0,``1})">
            <summary>
            Carve out a rectangular room.
            </summary>
            <typeparam name="N">The type of the node labels in the graph.</typeparam>
            <typeparam name="E">The type of the edge labels in the graph.</typeparam>
            <typeparam name="R">The type of the room data.</typeparam>
            <param name="mazeBuilder">The underlying MazeBuilder</param>
            <param name="rasterizer">How to carve the path.</param>
            <param name="room1">A <c>GridRoom</c> to carve from.</param>
            <param name="room2">A <c>GridRoom</c> to carve to.</param>
            <param name="mazePathCost">An <c>MazePathCost</c> used to determine the cost of an edge (if needed - can be null).</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonMazeBuilder.CarveGridRoom``3(CrawfisSoftware.Collections.Maze.MazeBuilderAbstract{``0,``1},CrawfisSoftware.Dungeons.GridRoom{``2})">
            <summary>
            Carve out a rectangular room.
            </summary>
            <typeparam name="N">The type of the node labels in the graph.</typeparam>
            <typeparam name="E">The type of the edge labels in the graph.</typeparam>
            <typeparam name="R">The type of the room data.</typeparam>
            <param name="mazeBuilder">The underlying MazeBuilder</param>
            <param name="room">A <c>GridRoom</c> to carve from.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonMazeBuilder.CarveShortestPath``3(CrawfisSoftware.Collections.Maze.MazeBuilderAbstract{``0,``1},CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Collections.Graph.EdgeCostDelegate{``1},System.Boolean)">
            <summary>
            Create a grid path between rooms using a shortest path algorithm.
            </summary>
            <typeparam name="N">The type of the node labels in the graph.</typeparam>
            <typeparam name="E">The type of the edge labels in the graph.</typeparam>
            <typeparam name="R">The type of the room data.</typeparam>
            <param name="mazeBuilder">The underlying MazeBuilder</param>
            <param name="room1">A <c>GridRoom</c> to carve from.</param>
            <param name="room2">A <c>GridRoom</c> to carve to.</param>
            <param name="edgeCostFunction">An <c>EdgeCostDelegate</c> used to determine the cost of an edge.</param>
            <param name="preserveExistingCells">Boolean indicating whether to only replace maze cells that are undefined.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.DungeonMazeBuilder.CarveElbowPassage``3(CrawfisSoftware.Collections.Maze.MazeBuilderAbstract{``0,``1},CrawfisSoftware.Dungeons.GridRoom{``2},CrawfisSoftware.Dungeons.GridRoom{``2},System.Boolean)">
            <summary>
            Create a grid path with two straight line segments.
            </summary>
            <typeparam name="N">The type of the node labels in the graph.</typeparam>
            <typeparam name="E">The type of the edge labels in the graph.</typeparam>
            <typeparam name="R">The type of the room data.</typeparam>
            <param name="mazeBuilder">The underlying MazeBuilder</param>
            <param name="room1">A <c>GridRoom</c> to carve from.</param>
            <param name="room2">A <c>GridRoom</c> to carve to.</param>
            <param name="preserveExistingCells">Boolean indicating whether to only replace maze cells that are undefined.</param>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.GridPassageConnectionData`1">
            <summary>
            A struct to represent a room in a grid.
            </summary>
            <typeparam name="C">The type of the data associated with the connection.</typeparam>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridPassageConnectionData`1.connectionData">
            <summary>
            The data associated with the connection.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.GridPassageConnectionData`1.PassageRasterizer">
            <summary>
            The type of rasterizer to use for the passage.
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.GridPassageConnectionData`1.#ctor(`0,CrawfisSoftware.Dungeons.PassageRasterizerType)">
            <summary>
            Constructor.
            </summary>
            <param name="connectionData">The data associated with the connection.</param>
            <param name="passageRasterizer">The type of rasterizer to use for the passage.</param>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.GridRoom`1">
            <summary>
            A struct to represent a room in a grid.
            </summary>
            <typeparam name="R">The type of the room data.</typeparam>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridRoom`1.minX">
            <summary>
            The minimum x coordinate of the room.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridRoom`1.minY">
            <summary>
            The minimum y coordinate of the room.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridRoom`1.width">
            <summary>
            The width of the room.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridRoom`1.height">
            <summary>
            The height of the room.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.GridRoom`1.roomData">
            <summary>
            The data associated with the room.
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.GridRoom`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,`0)">
            <summary>
            Constructor.
            </summary>
            <param name="minX">The minimum x coordinate of the room.</param>
            <param name="minY">The minimum y coordinate of the room.</param>
            <param name="width">The width of the room.</param>
            <param name="height">The height of the room.</param>
            <param name="roomData">The data associated with the room.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.GridRoom`1.RoomDistance(CrawfisSoftware.Dungeons.GridRoom{`0},CrawfisSoftware.Dungeons.GridRoom{`0})">
            <summary>
            The Manhattan distance between two rooms.
            </summary>
            <param name="room1">A <c>GridRoom</c>.</param>
            <param name="room2">A <c>GridRoom</c>.</param>
            <returns>The Manhattan distance between the rooms.</returns>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.PassageRasterizerType">
            <summary>
            Defined algorithms for connecting two rooms.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.PassageRasterizerType.Unspecified">
            <summary>
            No algorithm selected.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.PassageRasterizerType.Elbow">
            <summary>
            A simple path with one turn.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.PassageRasterizerType.ShortestPathBetweenRooms">
            <summary>
            Determine the shortest path between the rooms using edge weights.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.PassageRasterizerType.ShortestPathUsingExisting">
            <summary>
            Shortest path taking advantage of existing paths.
            </summary>
        </member>
        <member name="F:CrawfisSoftware.Dungeons.PassageRasterizerType.RandomWalk">
            <summary>
            Use a random walk
            </summary>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.RandomSpatialLayout`3">
            <summary>
            A class to randomly place rooms in a grid.
            </summary>
            <typeparam name="R">The type used for room data</typeparam>
            <typeparam name="C">The type used for connection data</typeparam>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.GridWidth">
            <summary>
            Get the width of the grid
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.GridHeight">
            <summary>
            Get the height of the grid
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.SpatialRoomGenerator">
            <summary>
            Get or set the room generator function. It should return a GridRoom given and AbstractRoom.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.RoomMoatSize">
            <summary>
            Get or set the outside wall buffer size
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.RasterType">
            <summary>
            Get or set the type of rasterizer to use for the passage.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.MaxNumberOfTriesPerRoom">
            <summary>
            Get or set the maximum number of tries to place a room.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.RandomGenerator">
            <summary>
            Get or set the random number generator.
            </summary>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.#ctor(System.Int32,System.Int32,CrawfisSoftware.Dungeons.DungeonGraph{`0,`1})">
            <summary>
            Constructor.
            </summary>
            <param name="gridWidth">The width of the desired grid.</param>
            <param name="gridHeight">The height of the desired grid.</param>
            <param name="dungeonGraph">The initial (abstract) <c>DungeonGrid</c>.</param>
        </member>
        <member name="M:CrawfisSoftware.Dungeons.RandomSpatialLayout`3.RandomRoomPlacement">
            <summary>
            Randomly place the rooms in the grid.
            </summary>
            <returns>A new <c>DungeonGraph></c> with <c>GridRoom</c>'s and <c>GridPassageConnectionData</c> connections.</returns>
        </member>
        <member name="T:CrawfisSoftware.Dungeons.RoomSizeData">
            <summary>
            A class to hold the room size data.
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RoomSizeData.MinRoomWidth">
            <summary>
            Get or set the minimum room width to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RoomSizeData.MaxRoomWidth">
            <summary>
            Get or set the maximum room width to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RoomSizeData.MinRoomHeight">
            <summary>
            Get or set the minimum room height to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RoomSizeData.MaxRoomHeight">
            <summary>
            Get or set the maximum room height to create
            </summary>
        </member>
        <member name="P:CrawfisSoftware.Dungeons.RoomSizeData.RoomMoatSize">
            <summary>
            Get or set the outside wall buffer size
            </summary>
        </member>
    </members>
</doc>
